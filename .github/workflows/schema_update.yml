name: Update GraphQL schema in Apollo Studio
on:
  push:
    branches:
      - main

env:
  APP_NAME: ${{ github.event.repository.name }}
  APP_PORT: "3000"
  APP_IMAGE_TAG: ${{ github.sha }}
  DOCKER_NETWORK: ci
  DATABASE_URL: "postgres://postgres:holaplex@db:5432/hub_nfts"
  KAFKA_BROKERS: "redpanda:9092"
  APOLLO_PROJECT: hub-dev@current

jobs:
  schema-update:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Setup docker network
        run: |
          docker network create $DOCKER_NETWORK
      - 
        name: Start Postgres
        run: |
          docker run -d --name db \
          -v $pwd:/var/lib/postgresql/data \
          --env-file .env \
          --network $DOCKER_NETWORK \
          postgres:15.1 
      - 
        name: Start Redpanda
        run: |
          docker run -d --name redpanda \
          --network $DOCKER_NETWORK \
          -p 8081:8081 -p 8082:8082 -p 9092:9092 -p 9644:9644 -p 29092:29092 \
          docker.redpanda.com/vectorized/redpanda:v22.3.13 \
          redpanda start \
            --smp 1 \
            --overprovisioned \
            --node-id 0 \
            --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092 \
            --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://redpanda:9092 \
            --pandaproxy-addr 0.0.0.0:8082 \
            --advertise-pandaproxy-addr localhost:8082

          # wait for the container to be up
          while :; do
            ! curl --silent 'http://localhost:8081/v1' || break
            sleep 3
          done
      - 
        name: Setup Solana tools
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.15.2/install)"
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          #Create keypair.json
          solana-keygen new --silent --outfile keypair.json --no-bip39-passphrase
      - 
        name: Wait for release workflow to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: release
          repo-token: ${{ secrets.ACTIONS_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - 
        name: Start ${{ github.event.repository.name }} container
        run: |
          docker run -d --name $APP_NAME \
          -v $(pwd)/keypair.json:/app/keypair.json \
          --network $DOCKER_NETWORK \
          -p $APP_PORT:$APP_PORT \
          --env-file .env \
          -e PORT=$APP_PORT \
          -e NFT_STORAGE_AUTH_TOKEN="" \
          -e KAFKA_BROKERS="$KAFKA_BROKERS" \
          -e DATABASE_URL="$DATABASE_URL"  \
          holaplex/$APP_NAME:$APP_IMAGE_TAG

          # wait for the container to be up
          while :; do
            ! curl --silent "http://localhost:$APP_PORT/graphql" || break
            echo 'waiting for container'
            docker logs $APP_NAME
            sleep 3
          done
      - 
        name: Retrieve GraphQL schema and push to Apollo Studio
        env:
          APOLLO_KEY: ${{ secrets.APOLLO_KEY }}
        run: |
          # install rover CLI
          curl -sSL https://rover.apollo.dev/nix/latest | sh
          export PATH="/home/runner/.rover/bin:$PATH"
          # Instrospect Graphql Server and push schema
          rover subgraph introspect http://localhost:$APP_PORT/graphql | \
          rover subgraph publish $APOLLO_PROJECT \
            --name $APP_NAME \
            --schema - \
            --routing-url http://$APP_NAME/graphql
      - 
        name: Invoke workflow in hub-permissions repo
        uses: benc-uk/workflow-dispatch@v1
        with:
          ref: main
          token: ${{ secrets.ACTIONS_TOKEN }}
          workflow: opa.yml
          repo: holaplex/hub-permissions
